Steps to add tailwind and flowbite in any page 
---------------------------------------------------------------

add template path in input.css

Run this Tailwind command

npx tailwind -i src/main/resources/static/css/input.css -o src/main/resources/static/css/output.css -- watch

now include output.css in html page

<link rel="stylesheet" data-th-href="@{'/css/output.css'}">

If you want to add flowbite library : include css and javascript using cdn

<link href="https://cdn.jsdelivr.net/npm/flowbite@2.4.1/dist/flowbite.min.css" rel="stylesheet" />

<script src="https://cdn.jsdelivr.net/npm/flowbite@2.4.1/dist/flowbite.min.js"></script>


Fragments in Thymeleaf
--------------------------------------------------------------

how to create fragment

<div th:fragment="parent(content)">
    <h1>This is Parent fragment</h1>
    <p>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Nobis, maiores?</p>
    <!-- <h1> Value of x is <span th:text="${x}"></span></h1>
    <h1>Value of y is <span th:text="${y}"></span></h1> -->

    <div th:replace="${content}"></div>
</div>

how to include fragment

<!-- using fragment -->
     <!-- <div th:insert="~{base :: parent('service one','service two')}">
            passing parameters
     </div> -->

     <!-- <div th:replace="~{base :: parent(~{::section})}">
        pass through tag
        <section >
            <h1>This is Dynamic services passed to base parent</h1>
        </section>
     </div>  -->

     <!-- <div th:replace="~{base :: parent(~{::#second_content})}">
        pass through id
        <section id="main_content">
            <h1>This is Dynamic services passed to base parent</h1>
        </section>
        <section id="second_content">
            <h1>This is second content</h1>
        </section>
     </div> -->

     <div th:replace="~{base :: parent(~{::.third_content})}">
        pass through class
        <section class="third_content">
            <h1>This is Dynamic services passed to base parent through class name</h1>
        </section>
     </div>

We can also use expression Thymeleaf Fragments

base.html

<div th:fragment="parent(content)">
    <h1>This is Parent fragment</h1>
    <p>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Nobis, maiores?</p>
    <!-- <h1> Value of x is <span th:text="${x}"></span></h1>
    <h1>Value of y is <span th:text="${y}"></span></h1> -->

    <div th:replace="${content}"></div>
</div>

<div th:fragment="test(content)">
    <div th:replace="${content}"></div>
</div>

about.html (using expressions)

<!-- using fragment -->
     <div th:replace="${isLogin} ? ~{base :: parent(~{::#logged_in})} : ~{base :: test(~{::#not_logged_in})}">
        <section id="logged_in">
            <h1>User is Logged in</h1>
            <h2>Dynamic Content</h2>
            <p>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Magni aliquid neque asperiores fugiat incidunt molestiae accusamus laudantium numquam autem deserunt.</p>
            <button>Click on Dynamic Content</button>
        </section>

        <section id="not_logged_in">
            <h1>User is not logged in</h1>
        </section>
     </div>